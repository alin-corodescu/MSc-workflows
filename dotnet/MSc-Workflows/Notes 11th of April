Notes 11th of April

    1. Need to come up with abstract (1-2 paragraphs)
    2. Figures into the design, implementation  sections.

Title:
Improving the performance of container-centric big data workflows through data locality and long-lived containers.


Abstract:
<some background about how we got here.>
Recently, there has been a shift in the big data field, where ways to process data as close to the source as possible are explore
 
 As part of the process of extracting value from the data, a variety of heterogenuous data sources, tools, processes need to be integrated. Software container technologies to isolate and manage distinct pieces of software uniformly, regardless of the language/technology they are written in. Existing workflow orchestration solutions leverage software containers as the method through which data sources and business logic can integrated into workflows.
 


Current thesis proposes a novel architecture for container-centric (cloud-native) workflow orchestration frameworks with a focus on performance.
build on top and expand on the idea of flexibility, interoperability and separation of concerns. And introduces the data locality benefit in an isolated manner (doesn't touch upon other concerns of the architecture)
The example implementation of the proposed architecture employs long-lived containers and efficient communication protocols (Protobuf + GRPC and Shared containers)
The paper studies the effect of the proposed architecture and implementation by comparing the solution with Argo workflows. Separate experiments are conducted to study the effect of the key aspects (data locality, shared containers, efficient communication) under different conditions (hardware topology, data volume, data velocity, )




What I've done:
    Fixed the experiments, got better numbers
        Fixed the implementation with TCP communication.
    Looked into Airflow and Argo, decided to go with Argo because the data locality because it is more expressive
        Will compare with Argo using cloud storage
        Vs my solution using my custom solution for storage.
    And Argo is closer in terms of architecture to the proposed solution.


For the implementation part:
    Multiple storage solutions.
    For Argo workflows 

For writing:
    Define words, acronyms.