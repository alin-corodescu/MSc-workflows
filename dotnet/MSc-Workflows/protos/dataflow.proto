syntax = "proto3";

import "google/protobuf/any.proto";
import "google/protobuf/empty.proto";

option csharp_namespace = "Workflows.Models.DataEvents";

message MetadataEvent {
  google.protobuf.Any metadata = 1;
  DataLocalization dataLocalization = 3;
}

message DataLocalization {
  string host = 1;
  string zone = 2;
}

message PushDataRequest {
  string sourceFilePath = 1;
  string deletePath = 2;
}
message PushDataReply {
  MetadataEvent generatedMetadata = 1;
}
message PullDataRequest {
  MetadataEvent metadata = 1;
  string targetPath = 2;
}
message PullDataReply {
  bool isSuccess = 1;
}
service StorageAdapter {
  rpc PushData (PushDataRequest) returns (PushDataReply);
  
  rpc PullData (PullDataRequest) returns (PullDataReply);
}

message LocalFileSystemMetadata {
  string fileName = 1;
}

message DataChunkAvailableRequest {
  LocalFileSystemMetadata metadata = 1; 
  string address = 2;
  DataLocalization localization = 3;
}
message DataChunkAvailableReply {
  bool isSuccess = 1;
}
message AddressRequest {
  LocalFileSystemMetadata metadata = 1;
}
message AddressReply {
  string address = 1;
  DataLocalization localization = 2;
}
service DataMasterService {
  rpc SignalDataChunkAvailable (DataChunkAvailableRequest) returns (DataChunkAvailableReply);
  rpc GetAddrForDataChunk (AddressRequest) returns (AddressReply);
}

message PeerDataRequest{
  LocalFileSystemMetadata identifier = 1;
}

message PeerDataReplyChunk {
  bytes payload = 1;
}

service DataPeerService {
  rpc GetData (PeerDataRequest) returns (stream PeerDataReplyChunk);
}

message DataInjectionRequest {
  int32 contentSize = 1;
  int32 count = 2;
}

message DataInjectionReply {
  repeated MetadataEvent events = 1;
}

service DataInjectionService {
  rpc InjectData(DataInjectionRequest) returns (DataInjectionReply);
}
